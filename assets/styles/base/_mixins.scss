// -----------------------------
// Mixins
// -----------------------------

//
// Breakpoint shortcut for media queries
//
@mixin breakpoint($class) {
    @if $class == xs {
        @media only screen and (max-width: 414px) { @content; }
    }

    @else if $class == sm {
        @media only screen and (max-width: 767px) { @content; }
    }

    @else if $class == md {
        @media only screen and (max-width: 991px) { @content; }
    }

    @else if $class == lg {
        @media only screen and (max-width: 1441px) { @content; }
    }

    @else {
        @warn "Breakpoint mixin supports: xs, sm, md, lg";
    }
}

// Example of usage
// aside.primary {1
//   float: right;
//   width: 350px;
//   @include breakpoint(sm) {
//     float: none;
//     width: 100%;
//   }
// }

//
// Button
//
@mixin flButton($color: #fff,
    $font-size: 30px,
    $background: transparent,
    $border: 4px solid #fff,
    $padding: 13px 35px) {
    color: $color;
    font-size: $font-size;
    font-weight: 500;
    border-radius: 0;
    text-transform: uppercase;
    background: $background;
    border: $border;
    padding: $padding;
    position: relative;
    @include transition(all 0.2s linear);
    @include align-self(center);
    &:hover, &:focus {
        color: $fl-blue;
        background: #fff;
    }
    @include breakpoint(lg) {
        font-size: 16px;
        padding: 9px 25px;
    }
}

.extendArrow {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto;
    right: 20px;
    width: 43px;
    height: 26px;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="3666.866 2245.613 42.584 25.619"><defs><style>.arrow-stroke { fill: none; stroke: #fff; stroke-width: 4px; }</style></defs><path id="path-1" class="arrow-stroke" d="M3668.307 2247l20.5 21.3 8.973-9.973 10.183-11.327"/></svg>') no-repeat right center;
    background-size: cover;
    @include breakpoint(lg) {
        width: 21px;
        height: 13px;
    }
}

.btn-fl {
    @include flButton();
    @include breakpoint(lg) {
        border: 2px solid #fff;
    }
}

.btn-fl--black-arrow {
    @include flButton($font-size: 22px, $padding: 9px 65px 9px 25px, $background: #fff, $color: $fl-dark-grey,
        $border: 4px solid $fl-dark-grey);
    position: relative;
    &::after {
        @extend .extendArrow;
        width: 31px;
        height: 16px;
        background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="3666.866 2245.613 42.584 25.619"><defs><style>.arrow-stroke { fill: none; stroke: #3E3E3E; stroke-width: 4px; }</style></defs><path id="path-1" class="arrow-stroke" d="M3668.307 2247l20.5 21.3 8.973-9.973 10.183-11.327"/></svg>') no-repeat right center;
    }
    &.right {
        &::after {
            @extend .extendArrow;
            @include transform(rotate(270deg));
        }
    }
    &.up {
        &::after {
            @extend .extendArrow;
            @include transform(rotate(180deg));
        }
    }
    &:hover, &:focus {
        color: #fff;
        background-color: $fl-dark-grey;
        &::after {
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="3666.866 2245.613 42.584 25.619"><defs><style>.arrow-stroke { fill: none; stroke: #fff; stroke-width: 4px; }</style></defs><path id="path-1" class="arrow-stroke" d="M3668.307 2247l20.5 21.3 8.973-9.973 10.183-11.327"/></svg>') no-repeat right center;
        }
    }
    @include breakpoint(lg) {
        font-size: 16px;
        padding: 9px 65px 9px 25px;
        border: 2px solid $fl-dark-grey;
    }
}

.btn-fl--arrow {
    @include flButton($padding: 13px 75px 13px 35px);
    position: relative;
    &::after {
        @extend .extendArrow;
    }
    &.right {
        &::after {
            @extend .extendArrow;
            @include transform(rotate(270deg));
        }
    }
    &.up {
        &::after {
            @extend .extendArrow;
            @include transform(rotate(180deg));
        }
    }
    &:hover, &:focus {
        &::after {
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="3666.866 2245.613 42.584 25.619"><defs><style>.arrow-stroke { fill: none; stroke: #37609b; stroke-width: 4px; }</style></defs><path id="path-1" class="arrow-stroke" d="M3668.307 2247l20.5 21.3 8.973-9.973 10.183-11.327"/></svg>') no-repeat right center;
        }
    }
    @include breakpoint(lg) {
        padding: 9px 65px 9px 25px;
        border: 2px solid #fff;
    }
}

.btn-fl--blue {
    @include flButton($padding: 17px 35px, $border: 0, $background: $fl-blue);
    &:hover, &:focus {
        color: #fff;
        background: darken($fl-blue, 10%);
    }
    @include breakpoint(lg) {
        padding: 9px 25px;
    }
}

.btn-fl--grey {
    @include flButton($padding: 17px 35px, $border: 0, $background: #535353);
    &:hover, &:focus {
        color: #fff;
        background: darken(#535353, 10%);
    }
    @include breakpoint(lg) {
        padding: 9px 25px;
    }
}

.btn-fl--black {
    @include flButton($padding: 12px 35px, $background: #fff, $color: #000,
        $border: 4px solid #000);
    &:hover, &:focus {
        color: #fff;
        background: #000;
    }
    @include breakpoint(lg) {
        border: 2px solid #000;
        padding: 9px 25px;
    }
}


//
// This mixin can be used to set the object-fit:
// @include object-fit(contain);
// or object-fit and object-position:
// @include object-fit(cover, top);
//
@mixin object-fit($fit: fill, $position: null){
    -o-object-fit: $fit;
    object-fit: $fit;
    @if $position {
        -o-object-position: $position;
        object-position: $position;
        font-family: 'object-fit: #{$fit}; object-position: #{$position}';
    }
    @else {
        font-family: 'object-fit: #{$fit}';
    }
}






